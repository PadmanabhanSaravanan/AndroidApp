name: Continuous Integration

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: app/build/outputs/apk/

    - name: Build Docker image
      run: docker build -t padmanabhan1/android-app:1.0 .

    - name: Push Docker image to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
        docker push padmanabhan1/android-app:1.0

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./downloaded-apk

    - name: View content
      run: ls -R ./downloaded-apk

    - name: Archive APK content
      uses: thedoctor0/zip-release@master
      with:
        filename: android-apk.zip
        path: ./downloaded-apk

    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          APK build for release ${{ github.run_number }}.
          - Commit: ${{ github.sha }}
          - Build Date: ${{ github.event.created_at }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./android-apk.zip
        asset_name: android-apk-v${{ github.run_number }}.zip
        asset_content_type: application/zip
